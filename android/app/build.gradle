plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keyPropertiesFile = rootProject.file("key.properties")
def keyProperties = new Properties()
if (keyPropertiesFile.exists()) {
    keyProperties.load(new FileInputStream(keyPropertiesFile))
}

android {
    namespace = "software.frazier.vitalmox"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "software.frazier.vitalmox"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            if (keyPropertiesFile.exists()) {
                storeFile file(keyProperties['storeFile'])
                storePassword keyProperties['storePassword']
                keyPassword keyProperties['keyPassword']
                keyAlias keyProperties['keyAlias']
            }
        }
        debug {
            // Default debug signing config, no changes needed
        }
    }

    buildTypes {
        release {
            // Use release signing config if key.properties exists, otherwise fall back to debug
            signingConfig = keyPropertiesFile.exists() ? signingConfigs.release : signingConfigs.debug
        }
    }

    flavorDimensions 'default'

    productFlavors {
        dev {
            dimension 'default'
            applicationIdSuffix '.dev'
            resValue 'string', 'app_name', 'Vital Mox (dev)'
        }

        production {
            dimension 'default'
            resValue 'string', 'app_name', 'Vital Mox'
        }
    }
}

flutter {
    source = "../.."
}
